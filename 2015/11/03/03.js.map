{"version":3,"sources":["03.js"],"names":[],"mappings":"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","file":"2015/11/03/03.js","sourcesContent":["/**\r\n * Created by jibhaine on 03/11/15.\r\n */\r\nconst\r\n    PARTICLE_FREQUENCY = 8,//number of frames between each particle generation\r\n    MAX_PARTICLES = 256,  //maximum\r\n    SCALE = 5,      //used to calculate size of particle from z position.\r\n    MAX_DEPTH = 400,      //used to calculate size of particle from z position.\r\n    PARTICLE_LIFE = 360,\r\n    ROTATION_SPEED = 0.07, //Radian angle added each frame.\r\n    MAX_SPEED = 3,//pixels per frame\r\n    HORIZONTAL_SPEED = 0.3, //speed at wich the particle goes away from the center\r\n    VERTICAL_SPEED = 0.7, //\r\n    COLORS =[0x0F6F78, 0x0CB378,0x1864AE,0x761665,0xA8187B, 0xC56916, 0x047D13],\r\n    TAU = 2*Math.PI;\r\n//Globals\r\nvar canvas = document.getElementById('canvas'),\r\n    context = canvas.getContext('2d'),\r\n    particles = [],\r\n    origin = getOrigin(),\r\n    frameCount = 0;\r\nfunction getOrigin(){\r\n    return {\r\n        x: window.innerWidth * .5,\r\n        y: window.innerHeight * .95,\r\n        z: 10\r\n    };\r\n}\r\nfunction resize() {\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n\r\n    origin = getOrigin();\r\n}\r\n/**\r\n * reset or creates a new particle.\r\n */\r\nfunction particleFactory(particle){\r\n    let p = particle || {};\r\n    p.x = origin.x;\r\n    p.y = origin.y;\r\n    p.z = origin.z;\r\n    p.color = COLORS[Math.floor(Math.random()*COLORS.length)];\r\n    p.speed = Math.random()*MAX_SPEED+1;//+1 to avois static particle\r\n    p.distanceFromCenter = 0;\r\n    p.angle = Math.random()*TAU;\r\n    p.radius = 0;//distance from origin\r\n    return p;\r\n}\r\n\r\nfunction draw(particle){\r\n    if(!isDead(particle)){\r\n        let particleSize = (MAX_DEPTH + particle.z)/MAX_DEPTH * SCALE;\r\n        //fix cause we can't draw an arc with a negative radius\r\n        if(particleSize<0){\r\n            particleSize=1;\r\n        }\r\n        context.fillStyle = '#' + particle.color.toString(16);\r\n        context.beginPath();\r\n        context.arc(particle.x, particle.y, particleSize, 0, TAU, true);\r\n        context.fill();\r\n    }\r\n}\r\n\r\nfunction move(particle){\r\n    //\r\n    particle.distanceFromCenter += HORIZONTAL_SPEED;\r\n    particle.angle += ROTATION_SPEED;\r\n\r\n    //goes up slowly\r\n    particle.y -= VERTICAL_SPEED;\r\n    particle.x = origin.x + Math.cos(particle.angle) * particle.distanceFromCenter;\r\n    particle.z = origin.z + Math.sin(particle.angle) * particle.distanceFromCenter;\r\n}\r\n/**\r\n * Consider a particle to be dead if it is outside canvas\r\n */\r\nfunction isDead(particle){\r\n    return particle.x > canvas.width || particle.x<0 || particle.y > canvas.height || particle.y <0 || particle.life < 0;\r\n}\r\n/**\r\n * Iterate through particles\r\n */\r\nfunction animate(timestamp) {\r\n    //reset canvas\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    //Draw\r\n    particles.forEach(draw);\r\n    particles.forEach(move);\r\n\r\n    //new particle\r\n    if(frameCount%PARTICLE_FREQUENCY == 0 )\r\n    {\r\n        //don't create a new particle every time, for performance\r\n        let deadParticles = particles.filter(isDead);\r\n        if(particles.length < MAX_PARTICLES && deadParticles.length == 0){\r\n            particles.push(particleFactory());\r\n        }else{\r\n            particleFactory(particles.filter(isDead)[0]);\r\n        }\r\n    }\r\n    frameCount++;\r\n    requestAnimationFrame(animate);\r\n}\r\n\r\nwindow.addEventListener(\r\n    'resize', resize\r\n);\r\n\r\nresize();\r\nanimate();"],"sourceRoot":"/source/"}