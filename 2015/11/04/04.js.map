{"version":3,"sources":["04.js"],"names":[],"mappings":"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","file":"2015/11/04/04.js","sourcesContent":["const TAU = Math.PI * 2,\r\n    HEX_ANGLE = TAU / 6,\r\n    HEX_AMOUNT = 256,\r\n    ZOOM=.5;\r\nlet BOUNDARIES = {\r\n    x:window.innerWidth,\r\n    y:window.innerHeight,\r\n    z:window.innerWidth\r\n};\r\n/**\r\n * Hexagon abstraction.\r\n */\r\nclass Hexagon {\r\n    constructor(opts) {\r\n        this.center = opts.center;\r\n        this.radius = opts.radius;\r\n        this.direction = opts.direction;\r\n        this.offset = opts.offset || HEX_ANGLE;\r\n        this.numberOfPoints = opts.nop || 6;\r\n        this.speed = 1.1;\r\n        this.full = false;\r\n    }\r\n    getPoint(i) {\r\n        let currentAngle = this.offset + i * TAU / this.numberOfPoints;\r\n        return {\r\n            x: this.center.x + Math.cos(currentAngle) * this.radius * this.center.z/BOUNDARIES.z,\r\n            y: this.center.y + Math.sin(currentAngle) * this.radius * this.center.z/BOUNDARIES.z,\r\n            z: this.center.z\r\n        };\r\n    }\r\n    getPath(){\r\n        let path = new Path2D();\r\n        path.moveTo(this.getPoint(0).x, this.getPoint(0).y);\r\n        for (let i = 1; i < this.numberOfPoints; i++) {\r\n            path.lineTo(this.getPoint(i).x, this.getPoint(i).y);\r\n        }\r\n        path.closePath();\r\n        return path;\r\n    }\r\n    draw(context, style, full) {\r\n        if (!full) {\r\n            context.strokeStyle = style;\r\n            context.stroke(this.getPath());\r\n        } else {\r\n            context.fillStyle = style;\r\n            context.fill(this.getPath());\r\n        }\r\n    }\r\n    move(){\r\n        this.center.x += this.direction.x * this.speed;\r\n        this.center.y += this.direction.y * this.speed;\r\n        this.center.z += this.direction.z * this.speed;\r\n    }\r\n    //reverse direction if we reach the border\r\n    collide(){\r\n        if(this.center.x < 0 || this.center.x > BOUNDARIES.x ){\r\n            this.direction.x = -this.direction.x;\r\n        }\r\n        if(this.center.y < 0 || this.center.y > BOUNDARIES.y){\r\n            this.direction.y = -this.direction.y;\r\n        }\r\n        if(this.center.z < 0|| this.center.z > BOUNDARIES.z){\r\n            this.direction.z = -this.direction.z;\r\n        }\r\n    }\r\n}\r\n\r\nclass Renderer {\r\n    constructor(opts) {\r\n        this.canvas = opts.canvas;\r\n        this.context = this.canvas.getContext('2d');\r\n        this.resize();\r\n    }\r\n    resize() {\r\n        this.canvas.width = window.innerWidth;\r\n        this.canvas.height = window.innerHeight;\r\n        this.center = this.getOrigin();\r\n    }\r\n    getOrigin() {\r\n        return {\r\n            x: window.innerWidth / 2,\r\n            y: window.innerHeight / 2,\r\n            z: window.innerWidth / 2\r\n        };\r\n    }\r\n    render(hexagons) {\r\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        this.context.fillStyle= 'rgb(0,0,0)';\r\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n        hexagons.forEach((h) => {\r\n            h.draw(this.context, 'rgba(255,255,255,0.25)', true);\r\n        h.collide(BOUNDARIES);\r\n    });\r\n}\r\n}\r\n//globals\r\nvar renderer = new Renderer({\r\n        canvas: document.getElementById('canvas')\r\n    }),\r\n    hexagons = [];\r\n\r\n\r\nfunction animate() {\r\n    hexagons.forEach((h)=>{h.move()});\r\nrenderer.render(hexagons);\r\nrequestAnimationFrame(animate);\r\n}\r\n\r\nfunction initialize() {\r\n    let radius = 100;\r\n    for (let i = 0; i < HEX_AMOUNT; i++)\r\n    {\r\n        let x = Math.random() * window.innerWidth;\r\n        let y = Math.random() * window.innerHeight;\r\n        let z = Math.random() * window.innerWidth;\r\n\r\n        hexagons.push(new Hexagon({\r\n                center: {\r\n                    x: x,\r\n                    y: y,\r\n                    z: z\r\n                },\r\n                radius: radius,\r\n                offset:HEX_ANGLE,\r\n                direction:{\r\n                    x: Math.random() * 2 - 1,\r\n                    y: Math.random() * 2 - 1,\r\n                    z: Math.random() * 2 - 1\r\n                }\r\n            })\r\n        );\r\n    }\r\n    animate();\r\n}\r\nfunction resize() {\r\n    BOUNDARIES = {\r\n        x:window.innerWidth,\r\n        y:window.innerHeight,\r\n        z:window.innerWidth\r\n    };\r\n    renderer.resize();\r\n}\r\n\r\nfunction clickHandler(event)\r\n{\r\n    let mousePosition = {x:event.clientX, y:event.clientY};\r\n    hexagons.forEach((h)=>{\r\n        h.full = renderer.context.isPointInPath(h.getPath(), mousePosition.x, mousePosition.y);\r\n});\r\n}\r\nfunction touchHandler(event)\r\n{\r\n    for(var i = 0;i<event.touches.length;i++){\r\n        clickHandler(event.touches[i]);\r\n    }\r\n}\r\n\r\nwindow.addEventListener('resize', resize);\r\ndocument.addEventListener('DOMContentLoaded', initialize);\r\ncanvas.addEventListener('click', clickHandler);\r\ncanvas.addEventListener('touch', touchHandler);"],"sourceRoot":"/source/"}