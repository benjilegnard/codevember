{"version":3,"sources":["26.js"],"names":[],"mappings":"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","file":"2015/11/26/26.js","sourcesContent":["const TAU = Math.PI * 2,\r\n    CURVES_PER_CIRCLE = 36,\r\n    DEV_FREQUENCY=0.1,\r\n    DEVIATION=60,\r\n    ROTATION_SPEED = TAU/1200,\r\n    canvas = document.getElementById('canvas'),\r\n    context = canvas.getContext('2d'),\r\n    origin = {\r\n        x: window.innerWidth / 2,\r\n        y: window.innerHeight / 2\r\n    },\r\n    circles = [];\r\n\r\nlet\r\n    frameCount = 0;\r\n/**\r\n * The curve, is a bezier line that goes from center to target, and its control point are moving\r\n */\r\nclass Curve {\r\n    constructor(angle, circle, alpha) {\r\n        this.angle = angle;\r\n        this.parent = circle;\r\n        this.alpha = alpha;\r\n        this.target = {\r\n            x:origin.x + Math.cos(this.angle) * this.parent.radius,\r\n            y:origin.y + Math.sin(this.angle) * this.parent.radius\r\n        };\r\n        this.ctrl1 = this.controlPoint(true);\r\n        this.ctrl2 = this.controlPoint(false);\r\n\r\n    }\r\n    draw() {\r\n        const color = 'rgba('+this.parent.color[0]+','+this.parent.color[1]+','+this.parent.color[2]+','+this.alpha+')';\r\n\r\n        context.beginPath();\r\n        context.strokeStyle = color;\r\n        context.lineWidth=2;\r\n        context.shadowBlur=4;\r\n        context.shadowColor='rgb('+this.parent.color[0]+','+this.parent.color[1]+','+this.parent.color[2]+')';\r\n        context.moveTo(origin.x, origin.y);\r\n\r\n        context.bezierCurveTo(\r\n            this.ctrl1.x,\r\n            this.ctrl1.y,\r\n            this.ctrl2.x,\r\n            this.ctrl2.y,\r\n            this.target.x,\r\n            this.target.y);\r\n\r\n        context.globalCompositeOperation ='lighten';\r\n\r\n        context.stroke();\r\n    }\r\n    move() {\r\n        this.target = {\r\n            x:origin.x + Math.cos(this.angle) * this.parent.radius,\r\n            y:origin.y + Math.sin(this.angle) * this.parent.radius\r\n        };\r\n        // move ctrlpoint1 perpendicular to the left from the middle of the radius\r\n        this.ctrl1 = this.controlPoint(true);\r\n        // move ctrlpoint2 perpendicular to the right from the middle of the radius\r\n        this.ctrl2 = this.controlPoint(false);\r\n        this.angle += ROTATION_SPEED * this.parent.rotationDirection;\r\n    }\r\n    controlPoint(leftOrRight) {\r\n        let middle = {\r\n            x:origin.x + Math.cos(this.angle)*this.parent.radius/2,\r\n            y:origin.y + Math.sin(this.angle)*this.parent.radius/2\r\n        };\r\n        let distance = (Math.sin(this.parent.offset + frameCount * DEV_FREQUENCY) * DEVIATION) * (leftOrRight ? 1 : -1);\r\n        //add TAU/4 to have perpendicular angle, from this curve.\r\n        return {\r\n            x: middle.x + Math.cos(this.angle + TAU / 4 ) * distance,\r\n            y: middle.y + Math.sin(this.angle + TAU / 4 ) * distance\r\n        };\r\n    }\r\n}\r\nclass Circle {\r\n    constructor(color, amount, direction, radiusRatio) {\r\n        this.color = color;\r\n        this.numberOfCurves = amount || CURVES_PER_CIRCLE;\r\n        this.curves = [];\r\n        this.radiusRatio = radiusRatio;\r\n        this.setRadius(Math.min(origin.x, origin.y) - 10);\r\n        this.offset = Math.random() * 360;\r\n        this.initialize();\r\n        this.rotationDirection = direction ;\r\n    }\r\n    initialize(){\r\n        for (let i = 0; i < this.numberOfCurves; i++) {\r\n            this.curves.push(\r\n                new Curve(\r\n                    TAU / this.numberOfCurves * i,\r\n                    this,\r\n                    i/this.numberOfCurves\r\n                )\r\n            );\r\n        }\r\n    }\r\n    animate() {\r\n        this.curves.forEach((curve) => {\r\n            curve.draw();\r\n            curve.move();\r\n        });\r\n        if(frameCount % Math.floor(this.numberOfCurves/4) == 0 ){\r\n            for (let i = 1; i < this.numberOfCurves; i++) {\r\n                this.curves[i-1].alpha = this.curves[i].alpha;\r\n            }\r\n            this.curves[this.numberOfCurves-1].alpha = this.curves[0].alpha;\r\n        }\r\n    }\r\n    setRadius(radius){\r\n        this.radius = this.radiusRatio * radius;\r\n    }\r\n}\r\n\r\nconst resize = () => {\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n        origin.x = window.innerWidth / 2;\r\n        origin.y = window.innerHeight / 2;\r\n        circles.forEach((circle)=>{\r\n            circle.setRadius(Math.min(origin.x, origin.y) - 10);\r\n        });\r\n    },\r\n    animate = () => {\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        circles.forEach((circle) => circle.animate());\r\n        frameCount++;\r\n        requestAnimationFrame(animate);\r\n    },\r\n    initialize = () => {\r\n        circles.push(new Circle([255,183,57],36,1,1.1));\r\n        circles.push(new Circle([66,182,163],15,-1,.8));\r\n        circles.push(new Circle([104,86,193],8,1,1));\r\n    };\r\n\r\nwindow.addEventListener('resize', resize);\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    resize();\r\n    initialize();\r\n    animate();\r\n});"],"sourceRoot":"/source/"}